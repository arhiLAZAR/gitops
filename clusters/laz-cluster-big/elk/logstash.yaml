---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: logstash
  namespace: elk
spec:
  interval: 10m
  chart:
    spec:
      chart: logstash
      version: v7.13.4
      sourceRef:
        kind: HelmRepository
        name: elastic
        namespace: flux-system
      interval: 10m
  values:
    service:
      type: LoadBalancer
      loadBalancerIP: "185.10.184.82"
      ports:
        - name: http
          port: 9600
          targetPort: 9600
          protocol: TCP
        - name: gelf-tcp
          port: 12201
          targetPort: 12201
          protocol: TCP
        - name: gelf-udp
          port: 12201
          targetPort: 12201
          protocol: UDP

    logstashConfig:
      logstash.yml: |
        http.host: 0.0.0.0
        xpack.monitoring.enabled: true
        xpack.monitoring.elasticsearch.username: '${ELASTICSEARCH_USERNAME}'
        xpack.monitoring.elasticsearch.password: '${ELASTICSEARCH_PASSWORD}'
        xpack.monitoring.elasticsearch.hosts: ["http://elasticsearch-master:9200"]
    logstashPipeline:
      uptime.conf: |
        input { exec { command => "uptime" interval => 30 } }
        output { elasticsearch {
          hosts => ["http://elasticsearch-master:9200"]
          user => '${ELASTICSEARCH_USERNAME}'
          password => '${ELASTICSEARCH_PASSWORD}'
          index => "logstash"
          }
        }
      default_gelf.conf: |
        input {
          gelf {
            port => 12201
            use_tcp => true
          }
        }
      default_syslog.conf: |
        input {
          syslog {
            port => 514
          }
        }

        output {
          elasticsearch {
            hosts => ["http://elasticsearch-master:9200"]
            user => '${ELASTICSEARCH_USERNAME}'
            password => '${ELASTICSEARCH_PASSWORD}'
            index => "test_pipe_from_logstash"
          }
        }

    extraEnvs:
      - name: 'ELASTICSEARCH_USERNAME'
        valueFrom:
          secretKeyRef:
            name: elastic-credentials
            key: username
      - name: 'ELASTICSEARCH_PASSWORD'
        valueFrom:
          secretKeyRef:
            name: elastic-credentials
            key: password
