---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: logstash
  namespace: elk
spec:
  interval: 10m
  chart:
    spec:
      chart: logstash
      version: v7.13.4
      sourceRef:
        kind: HelmRepository
        name: elastic
        namespace: flux-system
      interval: 10m
  values:
    replicas: 1

    service:
      type: LoadBalancer
      loadBalancerIP: "185.10.184.82"
      ports:
        - name: http
          port: 9600
          targetPort: 9600
          protocol: TCP
        - name: gelf-tcp
          port: 12201
          targetPort: 12201
          protocol: TCP
        - name: syslog-tcp
          port: 1514
          targetPort: 1514
          protocol: TCP

    persistence:
      enabled: true
    volumeClaimTemplate:
      storageClassName: openebs-hostpath
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

    logstashConfig:
      logstash.yml: |
        http.host: 0.0.0.0
        xpack.monitoring.enabled: true
        xpack.monitoring.elasticsearch.username: '${ELASTICSEARCH_USERNAME}'
        xpack.monitoring.elasticsearch.password: '${ELASTICSEARCH_PASSWORD}'
        xpack.monitoring.elasticsearch.hosts: ["https://elasticsearch-master:9200"]
        xpack.monitoring.elasticsearch.ssl.certificate_authority: /usr/share/logstash/config/certs/ca.crt
    logstashPipeline:
      uptime.conf: |
        input {
          exec {
            command => "uptime"
            interval => 30
            type => uptime
          }
        }

        output {
          if [type] == "uptime" {
            elasticsearch {
              hosts => ["https://elasticsearch-master:9200"]
              user => '${ELASTICSEARCH_USERNAME}'
              password => '${ELASTICSEARCH_PASSWORD}'
              cacert => "/usr/share/logstash/config/certs/ca.crt"
              index => "logstash_uptime"
            }
          }
        }

      default_gelf.conf: |
        input {
          gelf {
            port => 12201
            use_tcp => true
            type => gelf
          }
        }

        output {
          if [type] == "gelf" {
            elasticsearch {
              hosts => ["https://elasticsearch-master:9200"]
              user => '${ELASTICSEARCH_USERNAME}'
              password => '${ELASTICSEARCH_PASSWORD}'
              cacert => "/usr/share/logstash/config/certs/ca.crt"
              index => "default_gelf"
            }
          }
        }

      default_syslog.conf: |
        input {
          syslog {
            port => 1514
            type => syslog
          }
        }

        output {
          if [type] == "syslog" {
            elasticsearch {
              hosts => ["https://elasticsearch-master:9200"]
              user => '${ELASTICSEARCH_USERNAME}'
              password => '${ELASTICSEARCH_PASSWORD}'
              cacert => "/usr/share/logstash/config/certs/ca.crt"
              index => "default_syslog"
            }
          }
        }

    extraEnvs:
      - name: 'ELASTICSEARCH_USERNAME'
        valueFrom:
          secretKeyRef:
            name: elastic-credentials
            key: username
      - name: 'ELASTICSEARCH_PASSWORD'
        valueFrom:
          secretKeyRef:
            name: elastic-credentials
            key: password

    secretMounts:
      - name: elastic-certificates
        secretName: elastic-certificates
        path: /usr/share/logstash/config/certs
